diff --git a/.env.example b/.env.example
new file mode 100644
index 0000000..0c38c61
--- /dev/null
+++ b/.env.example
@@
# Backend
PORT=4000
DATABASE_URL=postgresql://superapp:superapp@postgres:5432/superapp
REDIS_URL=redis://redis:6379

# Frontend
VITE_API_URL=http://localhost:4000

diff --git a/README.md b/README.md
new file mode 100644
index 0000000..3c3b2d2
--- /dev/null
+++ b/README.md
@@
# ðŸš€ SuperApp Monorepo

This is the starter monorepo for the **SuperApp**.

## Structure
- **backend/** â†’ Node.js (Express + Prisma + Postgres)
- **frontend/** â†’ React + Vite
- **infra/** â†’ CI/CD
- **docker-compose.yml** â†’ dev stack

## Getting Started
```bash
docker compose up --build
diff --git a/docker-compose.yml b/docker-compose.yml
new file mode 100644
index 0000000..d3f3c3d
--- /dev/null
+++ b/docker-compose.yml
@@
version: "3.9"
services:
postgres:
image: postgres:15
environment:
POSTGRES_USER: superapp
POSTGRES_PASSWORD: superapp
POSTGRES_DB: superapp
ports:
- "5432:5432"
volumes:
- pgdata:/var/lib/postgresql/data

redis:
image: redis:7
ports:
- "6379:6379"

backend:
build: ./backend
ports:
- "4000:4000"
env_file:
- .env.example
depends_on:
- postgres
- redis

frontend:
build: ./frontend
ports:
- "3000:3000"
env_file:
- .env.example
depends_on:
- backend

volumes:
pgdata:

diff --git a/backend/package.json b/backend/package.json
new file mode 100644
index 0000000..8f3e2c1
--- /dev/null
+++ b/backend/package.json
@@
{
"name": "backend",
"version": "1.0.0",
"main": "src/index.js",
"scripts": {
"dev": "node src/index.js"
},
"dependencies": {
"express": "^4.19.0",
"cors": "^2.8.5",
"dotenv": "^16.3.1"
}
}

diff --git a/backend/src/index.js b/backend/src/index.js
new file mode 100644
index 0000000..8a3c92b
--- /dev/null
+++ b/backend/src/index.js
@@
import express from "express";
import cors from "cors";
import dotenv from "dotenv";

dotenv.config();
const app = express();
app.use(cors());
app.use(express.json());

app.get("/api", (req, res) => {
res.json({ message: "Hello from Backend ðŸš€" });
});

const PORT = process.env.PORT || 4000;
app.listen(PORT, () => {
console.log(âœ… Backend running on http://localhost:${PORT});
});

diff --git a/frontend/package.json b/frontend/package.json
new file mode 100644
index 0000000..b2e912f
--- /dev/null
+++ b/frontend/package.json
@@
{
"name": "frontend",
"version": "1.0.0",
"private": true,
"scripts": {
"dev": "vite",
"build": "vite build",
"preview": "vite preview"
},
"dependencies": {
"react": "^18.3.1",
"react-dom": "^18.3.1"
},
"devDependencies": {
"vite": "^5.0.0"
}
}

diff --git a/frontend/src/App.jsx b/frontend/src/App.jsx
new file mode 100644
index 0000000..af91c2f
--- /dev/null
+++ b/frontend/src/App.jsx
@@
import { useEffect, useState } from "react";

function App() {
const [message, setMessage] = useState("");

useEffect(() => {
fetch(import.meta.env.VITE_API_URL + "/api")
.then((res) => res.json())
.then((data) => setMessage(data.message));
}, []);

return (
<div>
<h1>ðŸš€ SuperApp Frontend</h1>
<p>{message}</p>
</div>
);
}

export default App;

diff --git a/frontend/index.html b/frontend/index.html
new file mode 100644
index 0000000..28a1c21
--- /dev/null
+++ b/frontend/index.html
@@

<!DOCTYPE html> <html lang="en"> <head> <meta charset="UTF-8" /> <title>SuperApp</title> </head> <body> <div id="root"></div> <script type="module" src="/src/App.jsx"></script> </body> </html>

diff --git a/infra/ci.yml b/infra/ci.yml
new file mode 100644
index 0000000..ce74f21
--- /dev/null
+++ b/infra/ci.yml
@@
name: CI

on:
push:
branches: [ main ]

jobs:
build:
runs-on: ubuntu-latest
steps:
- uses: actions/checkout@v3
- name: Install Backend
run: cd backend && npm install
- name: Install Frontend
run: cd frontend && npm install
